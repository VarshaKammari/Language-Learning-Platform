{"ast":null,"code":"var _jsxFileName = \"D:\\\\LogIn\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const location = useLocation();\n  const {\n    email\n  } = location.state;\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n  async function populateQuote() {\n    const req = await fetch(`http://localhost:1337/api/quote?email=${email}`);\n    const data = await req.json();\n    console.log(data);\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  async function updateQuote(event) {\n    event.preventDefault();\n    try {\n      const req = await fetch('http://localhost:1337/api/quote/update', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          quote: tempQuote\n        })\n      });\n      const data = await req.json();\n      console.log('updateQuote response:', data);\n      if (data.status === 'ok') {\n        setQuote(tempQuote);\n        setTempQuote('');\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error('Error updating quote:', error);\n    }\n  }\n  useEffect(() => {\n    if (email) {\n      populateQuote();\n    }\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'quote not found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => {\n          setTempQuote(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"syKk6CsdbASN1NO+VZen2+rjdQ0=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Dashboard","_s","location","email","state","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","data","json","console","log","status","alert","error","updateQuote","event","preventDefault","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/LogIn/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Dashboard=()=>{\r\n    const location=useLocation()\r\n    const {email}=location.state;\r\n    const [quote,setQuote]=useState('');\r\n    const [tempQuote,setTempQuote]=useState('');\r\n\r\n    async function populateQuote(){\r\n        const req= await fetch(`http://localhost:1337/api/quote?email=${email}`)\r\n        const data=await req.json();\r\n        console.log(data);\r\n        if(data.status==='ok')\r\n        {\r\n            setQuote(data.quote);\r\n        }\r\n        else{\r\n            alert(data.error);\r\n        }\r\n    }\r\n    async function updateQuote(event){\r\n        event.preventDefault();\r\n        try{\r\n            const req= await fetch('http://localhost:1337/api/quote/update',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                },\r\n                body:JSON.stringify({\r\n                    email:email,\r\n                    quote:tempQuote\r\n                }),\r\n            })\r\n            \r\n            const data=await req.json();\r\n            console.log('updateQuote response:',data);\r\n            if(data.status==='ok')\r\n            {\r\n                setQuote(tempQuote);\r\n                setTempQuote('');\r\n            }\r\n            else{\r\n                alert(data.error);\r\n            }\r\n        }catch(error){\r\n            console.error('Error updating quote:',error);\r\n        }\r\n    }           \r\n    useEffect(() => {\r\n        if(email){\r\n            populateQuote();\r\n        }\r\n    }, [email]);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Your quote: {quote || 'quote not found'}</h1>\r\n            <form onSubmit={updateQuote}>\r\n                <input type=\"text\" placeholder=\"Quote\" value={tempQuote} onChange={(e)=>{setTempQuote(e.target.value)}} />\r\n                <input type=\"submit\" value=\"Update quote\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}